[{"F:\\new project\\second_hand_seller\\frontend\\src\\index.js":"1","F:\\new project\\second_hand_seller\\frontend\\src\\store.js":"2","F:\\new project\\second_hand_seller\\frontend\\src\\App.js":"3","F:\\new project\\second_hand_seller\\frontend\\src\\reducers\\productReducers.js":"4","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Header.js":"5","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\LoginScreen.js":"6","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\UserListScreen.js":"7","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductScreen.js":"8","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\Landing.js":"9","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\AboutUsScreen.js":"10","F:\\new project\\second_hand_seller\\frontend\\src\\reducers\\userReducer.js":"11","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\NotFoundScreen.js":"12","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\UserUpdateScreen.js":"13","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\RegisterScreen.js":"14","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Footer.js":"15","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\EmailVerificationScreen.js":"16","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductEditScreen.js":"17","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductListScreen.js":"18","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductCreateScreen.js":"19","F:\\new project\\second_hand_seller\\frontend\\src\\components\\FormContainer.js":"20","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Loader.js":"21","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Message.js":"22","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Product.js":"23","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Meta.js":"24","F:\\new project\\second_hand_seller\\frontend\\src\\components\\SearchBox.js":"25","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Paginate.js":"26","F:\\new project\\second_hand_seller\\frontend\\src\\types\\userConstants.js":"27","F:\\new project\\second_hand_seller\\frontend\\src\\types\\productConstants.js":"28","F:\\new project\\second_hand_seller\\frontend\\src\\actions\\productActions.js":"29","F:\\new project\\second_hand_seller\\frontend\\src\\actions\\userActions.js":"30","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\Backward.js":"31"},{"size":302,"mtime":1680322277057,"results":"32","hashOfConfig":"33"},{"size":1646,"mtime":1679885727611,"results":"34","hashOfConfig":"33"},{"size":2986,"mtime":1679885727564,"results":"35","hashOfConfig":"33"},{"size":3839,"mtime":1679885727564,"results":"36","hashOfConfig":"33"},{"size":2765,"mtime":1680322276812,"results":"37","hashOfConfig":"33"},{"size":2703,"mtime":1680322277204,"results":"38","hashOfConfig":"33"},{"size":3128,"mtime":1679885727611,"results":"39","hashOfConfig":"33"},{"size":15829,"mtime":1683301003706,"results":"40","hashOfConfig":"33"},{"size":2370,"mtime":1680322277134,"results":"41","hashOfConfig":"33"},{"size":1487,"mtime":1680322277078,"results":"42","hashOfConfig":"33"},{"size":4768,"mtime":1679885727564,"results":"43","hashOfConfig":"33"},{"size":678,"mtime":1679885727611,"results":"44","hashOfConfig":"33"},{"size":9002,"mtime":1679885727611,"results":"45","hashOfConfig":"33"},{"size":5446,"mtime":1680322277264,"results":"46","hashOfConfig":"33"},{"size":386,"mtime":1680155007293,"results":"47","hashOfConfig":"33"},{"size":1143,"mtime":1679885727611,"results":"48","hashOfConfig":"33"},{"size":7773,"mtime":1683308467341,"results":"49","hashOfConfig":"33"},{"size":3310,"mtime":1679885727611,"results":"50","hashOfConfig":"33"},{"size":6850,"mtime":1683220455775,"results":"51","hashOfConfig":"33"},{"size":351,"mtime":1679885727564,"results":"52","hashOfConfig":"33"},{"size":333,"mtime":1680322276819,"results":"53","hashOfConfig":"33"},{"size":245,"mtime":1679885727564,"results":"54","hashOfConfig":"33"},{"size":824,"mtime":1680155007325,"results":"55","hashOfConfig":"33"},{"size":489,"mtime":1680322277054,"results":"56","hashOfConfig":"33"},{"size":780,"mtime":1679885727564,"results":"57","hashOfConfig":"33"},{"size":798,"mtime":1679885727564,"results":"58","hashOfConfig":"33"},{"size":1796,"mtime":1679885727611,"results":"59","hashOfConfig":"33"},{"size":1364,"mtime":1679885727611,"results":"60","hashOfConfig":"33"},{"size":6214,"mtime":1683220702279,"results":"61","hashOfConfig":"33"},{"size":7678,"mtime":1680338404374,"results":"62","hashOfConfig":"33"},{"size":1245,"mtime":1680322277079,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1vbiceh",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},"F:\\new project\\second_hand_seller\\frontend\\src\\index.js",[],["135","136"],"F:\\new project\\second_hand_seller\\frontend\\src\\store.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\App.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\reducers\\productReducers.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\components\\Header.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\UserListScreen.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductScreen.js",["137","138","139","140"],"import React, { useState, useEffect } from \"react\";\r\nimport Meta from \"../components/Meta\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from \"../actions/productActions\";\r\nimport axios from \"axios\";\r\nimport { sendEmail } from \"../actions/userActions\";\r\nimport { PRODUCT_REVIEW_RESET } from \"../types/productConstants\";\r\nimport Backward from \"./Backward\";\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [data1, setData1] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const [sendMail, setSendMail] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n\r\n  const [recommandbooks, setrecommandbooks] = useState(\"\");\r\n  const [recom, setRecom] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const emailReducer = useSelector((state) => state.emailReducer);\r\n  const {\r\n    loading: loadingEmail,\r\n    error: errorEmail,\r\n    data: dataEmail,\r\n  } = emailReducer;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    loading: loadingReview,\r\n    error: errorReview,\r\n    success: successReview,\r\n  } = productReviewCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userData } = userLogin;\r\n\r\n  useEffect(async () => {\r\n    if (successReview) {\r\n      setComment(\"\");\r\n      dispatch({\r\n        type: PRODUCT_REVIEW_RESET,\r\n      });\r\n    }\r\n    dispatch(listProductDetails(match.params.id));\r\n\r\n    const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n    var recom = [];\r\n    setData1(data);\r\n    if (data.recbook.length != 0) {\r\n\r\n      for (var i = 0; i < data.recbook[0].searched_book.length; i++) {\r\n        console.log(data.product.description);\r\n        recom[i] = (\r\n          <Col xs={6} sm={2} md={4} lg={3} className=\"mb-4\" key={i}>\r\n            <Card style={{ width: \"auto\", height: \"auto\" }} border=\"primary\">\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src={data.recbook[0].searched_book[i].book_url}\r\n              />\r\n              <Card.Body>\r\n                <Card.Title>\r\n                  <strong>Book Name </strong> :-{\" \"}\r\n                  <u>{data.recbook[0].searched_book[i].book_title}</u>\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  Book Author :- {data.recbook[0].searched_book[i].book_author}\r\n                </Card.Text>\r\n                {/* <Button variant=\"primary\">Just Google it </Button> */}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        );\r\n      }\r\n    }\r\n    setRecom(recom);\r\n\r\n    setrecommandbooks(recom);\r\n    console.log(data.recbook[0].searched_book);\r\n  }, [match.params.id, dispatch, successReview]);\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProductReview(match.params.id, comment));\r\n  };\r\n  const emailSubmit = (e) => {\r\n    e.preventDefault();\r\n    setEmailSent(true);\r\n\r\n    dispatch(\r\n      sendEmail(\r\n        product?.seller?.selleremail,\r\n        text,\r\n        userData?.name,\r\n        userData?.address,\r\n        product?.name,\r\n        userData?.email,\r\n        userData?.contact?.phone_no\r\n      )\r\n    );\r\n\r\n    setText(\"\");\r\n\r\n    setSendMail(false);\r\n    setTimeout(() => {\r\n      setEmailSent(false);\r\n    }, 10000);\r\n  };\r\n  const sendEMAIL = () => {\r\n    setSendMail(true);\r\n  };\r\n  const cancelHandler = () => {\r\n    setSendMail(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/\">\r\n        <div style={{ height: '42px', width: '42px' }}>\r\n          <Backward />\r\n        </div>\r\n      </Link>\r\n      <br />\r\n      {userData && userData._id === product.user && (\r\n        <Link\r\n          to={`/admin/product/${match.params.id}/edit`}\r\n          className=\"btn btn-primary my-3\"\r\n        >\r\n          Edit Book Details\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row className=\"row mb-2\">\r\n            <Col md={6} className=\"image-area\">\r\n              {/* <Carousel> */}\r\n              {product.images.map((image) => (\r\n                // <Carousel.Item key={image._id}>\r\n                <Image\r\n                  className=\"d-block w-100\"\r\n                  src={image?.image1}\r\n                  alt=\"First slide\"\r\n                />\r\n              ))}\r\n            </Col>\r\n\r\n            <Col className=\"borderaround setheight\" md={6}>\r\n              <p className=\"details\">\r\n                <i className=\"fas fa-info\"></i> General Details\r\n              </p>\r\n\r\n              <Row>\r\n                <Col className=\"product  \" md={4} sm={4} xs={4}>\r\n                  <ul>\r\n                    <li> Product Id:</li>\r\n\r\n                    <li> Posted On:</li>\r\n                    <li> Expires On:</li>\r\n                    <li> Product:</li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={8} sm={8} xs={8}>\r\n                  <ul>\r\n                    <li>{product._id}</li>\r\n\r\n                    <li>{product?.createdAt?.substring(0, 10)}</li>\r\n                    <li>{product?.expiresOn?.substring(0, 10)}</li>\r\n                    <li> {product.name}</li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          {loadingEmail && <Loader />}\r\n          {errorEmail && <Message variant=\"danger\">{errorEmail}</Message>}\r\n          {/* {console.log(dataEmail?.response)} */}\r\n          {dataEmail && emailSent && (\r\n            <Message variant=\"success\">{dataEmail.response}</Message>\r\n          )}\r\n          {sendMail && userData && (\r\n            <Row id=\"email\" className=\"mt-5\">\r\n              <Col md={10} sm={12} className=\"formAround\">\r\n                <Form onSubmit={emailSubmit}>\r\n                  <div className=\"text-area1\">\r\n                    <span className=\"text-area2\">Send Email</span>\r\n\r\n                    <p className=\"text-area3\">\r\n                      Get in touch with {product?.seller?.sellername}\r\n                    </p>\r\n                  </div>\r\n                  <Row>\r\n                    <Col md={4} sm={4} xs={4}>\r\n                      <ul className=\"marginshift\">\r\n                        <p>{\"\"}</p>\r\n                        <br />\r\n                        <li className=\"mt-2\">Your Name:</li>\r\n                        <li>Your Email:</li>\r\n                        <li>Your Phone No:</li>\r\n                        <li>Your Message:</li>\r\n                      </ul>\r\n                    </Col>\r\n                    <Col md={8} sm={8} xs={8}>\r\n                      <p className=\"cross\">\r\n                        <button\r\n                          onClick={cancelHandler}\r\n                          className=\" cancel m-auto \"\r\n                        >\r\n                          {\" \"}\r\n                          <i className=\"far fa-window-close\"></i>\r\n                        </button>\r\n                      </p>\r\n                      <li>{userData.name}</li>\r\n                      <li>{userData.email}</li>\r\n                      <li>{userData?.contact?.phone_no}</li>\r\n                      <li>\r\n                        <textarea\r\n                          style={{ maxWidth: \"100%\", borderRadius: \"5px\" }}\r\n                          id=\"w3review\"\r\n                          name=\"text\"\r\n                          value={text}\r\n                          onChange={(e) => setText(e.target.value)}\r\n                          rows=\"8\"\r\n                          cols=\"55\"\r\n                          required\r\n                        />\r\n                      </li>\r\n                    </Col>\r\n                    <button className=\"button \" type=\"submit\">\r\n                      Send Email\r\n                    </button>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <Col className=\"borderaround mt-5\" md={10}>\r\n              <p className=\"details\">\r\n                <i className=\"fas fa-info\"></i> Seller Details\r\n              </p>\r\n\r\n              <Row className=\"mb-2\">\r\n                <Col className=\"product\" md={4} sm={2} xs={2}>\r\n                  <ul>\r\n                    <li> Name:</li>\r\n\r\n                    <li> Email:</li>\r\n                    <li> Address:</li>\r\n                    <li>Phone:</li>\r\n                    <li></li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={8} sm={10} xs={10}>\r\n                  <ul>\r\n                    <li>{product?.seller?.sellername}</li>\r\n\r\n                    <li>\r\n                      {/* {product?.seller?.selleremail}{' '} */}\r\n                      <span>\r\n                        <button\r\n                          className=\"emailbutton btn-success\"\r\n                          onClick={sendEMAIL}\r\n                        >\r\n                          Send Email\r\n                        </button>\r\n                      </span>\r\n                    </li>\r\n                    <li>{product?.seller?.selleraddress}</li>\r\n                    <li>\r\n                      {product?.seller?.phoneNo?.mobile}{\" \"}\r\n                      <span>\r\n                        {product?.seller?.phoneNo?.isVerified ? (\r\n                          <span>\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n                            <span className=\"underlined\">verified</span>\r\n                          </span>\r\n                        ) : (\r\n                          <span>\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n                            <span className=\"underlined\">unverified</span>\r\n                          </span>\r\n                        )}{\" \"}\r\n                      </span>\r\n                    </li>\r\n                    <li></li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n              {sendMail && !userData && (\r\n                <Message variant=\"danger\">\r\n                  You need to be logged in to use this feature.{\" \"}\r\n                  <span>\r\n                    <Link to=\"/login\">Log In</Link> to Continue\r\n                  </span>\r\n                </Message>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-3\">\r\n            <Col className=\"borderaround mt-5 \" md={10}>\r\n              <p className=\"details\">\r\n                <i className=\"fas fa-info\"></i> Pricing Details\r\n              </p>\r\n              <Row>\r\n                <Col className=\"product\" md={6} sm={6} xs={4}>\r\n                  <ul>\r\n                    <li>Total Price:</li>\r\n                    {product?.Cost?.negotiable && <li>Negotiable:</li>}\r\n                  </ul>\r\n                </Col>\r\n                <Col md={6} sm={6} xs={8}>\r\n                  <ul>\r\n                    <li> Rs {product?.Cost?.price}</li>\r\n                    {product?.Cost?.negotiable && <li>Yes</li>}\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"borderaround mt-5\" md={10} sm={12} xs={12}>\r\n              <p className=\"details \">\r\n                <i className=\"fas fa-info\"></i> Description\r\n              </p>\r\n              <p className=\"detailsdescription\">{product.description}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"borderaround mt-5\" md={10}>\r\n              <p className=\"details\">\r\n                <i className=\"fas fa-info\"></i> Delivery Information\r\n              </p>\r\n              <Row>\r\n                <Col className=\"product\" md={6} sm={6} xs={5}>\r\n                  <ul>\r\n                    <li>Delivery Area:</li>\r\n                    <li>Delivery Charge:</li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={6} sm={6} xs={7}>\r\n                  <ul>\r\n                    <li>{product?.shippingAddress?.address} </li>\r\n                    <li>\r\n                      {\" \"}\r\n                      Rs {\"\"}\r\n                      {product?.shippingAddress?.shippingCharge}\r\n                    </li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col\r\n              className=\"borderaround mt-5\"\r\n              style={{ maxHeight: \"auto\" }}\r\n              md={10}\r\n              sm={12}\r\n              xs={12}\r\n            >\r\n              <p className=\"details\">\r\n                <i className=\"fas fa-info\"></i> Recommended Books\r\n              </p>\r\n              <Row>\r\n                {/* <Container className=\"d-flex justify-content-between\" style={{ width: 'auto', height: '60%' }}> */}\r\n                <Container className=\"d-flex  \">\r\n                  <Row>{recom}</Row>\r\n                </Container>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row className=\"mt-3\">\r\n            <Col md={6}>\r\n              <h4>Buyer's Speak</h4>\r\n              {product.reviews.length === 0 && (\r\n                <Message variant=\"primary\">Be the First One to Review</Message>\r\n              )}\r\n              <ListGroup variant=\"flush\">\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    {/* <strong>{review.name}</strong>\r\n                    <p>{review.createdAt.substring(0, 10)}</p> */}\r\n                    <p>\r\n                      Q.<span className=\"comment\"> {review.comment} </span>\r\n                      <span className=\"review\">\r\n                        <span style={{ color: \"#32a897\", fontWeight: \"800\" }}>\r\n                          --Posted By <strong>{review.name}</strong> on{\" \"}\r\n                          <strong> {review.createdAt.substring(0, 10)} </strong>{\" \"}\r\n                        </span>\r\n                      </span>\r\n                    </p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <p>Post Your Speak</p>\r\n                  {errorReview && (\r\n                    <Message variant=\"danger\">{errorReview}</Message>\r\n                  )}\r\n\r\n                  {loadingReview && <Loader />}\r\n                  {userData ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId=\"comment\">\r\n                        {/* <Form.Label>Comment</Form.Label> */}\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          row=\"3\"\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type=\"submit\" variant=\"primary\">\r\n                        Post\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant=\"primary\">\r\n                      You must <Link to=\"/login\">Log In</Link> to post your\r\n                      speak{\" \"}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\Landing.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\AboutUsScreen.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\reducers\\userReducer.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\NotFoundScreen.js",["141","142","143"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\n\r\nconst NotFoundScreen = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <img src='https://i.imgur.com/lKJiT77.png' />\r\n      </Row>\r\n      <Row>\r\n        <Col md={3}></Col>\r\n\r\n        <Col md={6}>\r\n          <h1 style={{ textAlign: 'Center' }}>\r\n           This Hungry Dog Ate This Page\r\n          </h1>\r\n        </Col>\r\n        <Col md={3}></Col>\r\n      </Row>\r\n      <Row className='docenter'>\r\n        <Link to='/' className='btn btn-success '>\r\n          GO BACK\r\n        </Link>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotFoundScreen\r\n","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\UserUpdateScreen.js",["144"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts, deleteProduct } from '../actions/productActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { updateUser, getUserDetails } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_RESET, USER_DETAILS_RESET } from '../types/userConstants'\r\nconst UserUpdateScreen = ({ history, match }) => {\r\n  const userId = match.params.id\r\n  var i = 1\r\n  const [name, setName] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [phone_no, setPhone_no] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userData } = userLogin\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const { success, loading, error } = userUpdate\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { user, loading: loadingDetails } = userDetails\r\n  const productList = useSelector((state) => state.productList)\r\n  const { products, loading: loadinglist } = productList\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n\r\n  const { success: successDelete } = productDelete\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n    if (!userData || success) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n\r\n      if (userData && userData.isAdmin) {\r\n        history.push('/admin/userlist')\r\n      } else {\r\n        history.push('/')\r\n      }\r\n    } else {\r\n      if (!user?.name) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setAddress(user.address)\r\n        setPhone_no(user?.contact?.phone_no)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [history, userData, user, success, dispatch, userId, successDelete])\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    } else {\r\n      dispatch(\r\n        updateUser({\r\n          _id: userId,\r\n          name,\r\n          email,\r\n          password,\r\n          address,\r\n\r\n          phone_no,\r\n        })\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <h1>Details</h1>\r\n\r\n        {loadingDetails && <Loader />}\r\n        <Form onSubmit={submitHandler} className='mt-5 mb-2'>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>\r\n              Email Address{' '}\r\n              <small className='slanted'>\r\n                {' '}\r\n                *Be sure to enter your valid email address\r\n              </small>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='address'>\r\n            <Form.Label> Address</Form.Label>\r\n            <Form.Control\r\n              type='address'\r\n              placeholder='Enter Address'\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='contact No'>\r\n            <Form.Label>\r\n              Mobile No{' '}\r\n              <small className='slanted'>\r\n                * Be sure to enter a correct 10 digit number starting with 9\r\n              </small>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type='contact'\r\n              placeholder='Enter Mobile No'\r\n              value={phone_no}\r\n              onChange={(e) => setPhone_no(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmpassword'>\r\n            <Form.Label>Confirm Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          {loading && <Loader />}\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update Profile\r\n          </Button>\r\n        </Form>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && (\r\n          <Message variant='success'>Profile updated successfully</Message>\r\n        )}\r\n      </FormContainer>\r\n      <Row>\r\n        <Col md={2}></Col>\r\n        <Col md={8}>\r\n          {loadinglist ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <h3>My Uploads</h3>\r\n              <Table\r\n                striped\r\n                bordered\r\n                hover\r\n                responsive\r\n                className='table-sm'\r\n                variant='danger'\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>SN</th>\r\n                    <th>ID</th>\r\n                    <th>Product Name</th>\r\n                    <th>Category</th>\r\n                    <th>Price</th>\r\n                    <th>Negotiable</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {console.log(products)}\r\n                  {console.log(products.length)} */}\r\n                  {userData &&\r\n                    products &&\r\n                    products.length !== 0 &&\r\n                    products.map(\r\n                      (product) =>\r\n                        product &&\r\n                        product.user == userData._id && (\r\n                          <tr key={product._id}>\r\n                            <td>{i++}</td>\r\n                            <td>{product._id}</td>\r\n                            <td>{product.name}</td>\r\n\r\n                            <td>{product.category}</td>\r\n                            <td>{product?.Cost.price}</td>\r\n                            <td>\r\n                              {product?.Cost.negotiable ? (\r\n                                <i\r\n                                  className='fas fa-check'\r\n                                  style={{ color: 'green' }}\r\n                                ></i>\r\n                              ) : (\r\n                                <i\r\n                                  className='fas fa-times'\r\n                                  style={{ color: 'red' }}\r\n                                ></i>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              <LinkContainer\r\n                                to={`/admin/product/${product._id}/edit`}\r\n                              >\r\n                                <Button variant='light' className='btn-sm'>\r\n                                  <i className='fas fa-edit'></i>\r\n                                </Button>\r\n                              </LinkContainer>\r\n                              <Button\r\n                                variant='danger'\r\n                                className='btn-sm'\r\n                                onClick={() => deleteHandler(product._id)}\r\n                              >\r\n                                <i className='fas fa-trash'></i>\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        )\r\n                    )}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col md={2}></Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserUpdateScreen\r\n","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\RegisterScreen.js",["145"],"import React, { useState, useEffect } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { verify } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const userVerification = useSelector((state) => state.userVerification);\r\n  const { verification, loading, error } = userVerification;\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const {\r\n    userData,\r\n    loading: loadingRegister,\r\n    error: errorRegister,\r\n  } = userRegister;\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n  useEffect(() => {\r\n    if (userData) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, redirect, userData]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 3000);\r\n    } else {\r\n      dispatch(verify(name, email, password, contact, address));\r\n    }\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>SIGN UP</h1>\r\n      <Form onSubmit={submitHandler} className=\"mt-5\">\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>\r\n            Email Address{\" \"}\r\n            <small className=\"slanted\">\r\n              {\" \"}\r\n              *Be sure to enter your valid email address\r\n            </small>\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label> Address</Form.Label>\r\n          <Form.Control\r\n            type=\"address\"\r\n            placeholder=\"Enter Address\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"contact No\">\r\n          <Form.Label>\r\n            Mobile No{\" \"}\r\n            <small className=\"slanted\">\r\n              * Be sure to enter a correct 10 digit number starting with 9\r\n            </small>\r\n          </Form.Label>\r\n          <Form.Control\r\n            type=\"contact\"\r\n            placeholder=\"Enter Mobile No\"\r\n            value={contact}\r\n            onChange={(e) => setContact(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmpassword\">\r\n          <Form.Label>Confirm Password </Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>{\" \"}\r\n      <Row className=\"py-3\">\r\n        {/* {!loading && ()} */}\r\n        <Col>\r\n          Already Have an Account?\r\n          <Link\r\n            className=\"underlined1 \"\r\n            to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n          >\r\n            <span className=\"btn-primary mb-3 \"> Login</span>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      {loading && (\r\n        <Spinner\r\n          animation=\"border\"\r\n          role=\"status\"\r\n          variant=\"danger\"\r\n          style={{\r\n            width: \"100px\",\r\n            margin: \"auto\",\r\n            height: \"100px\",\r\n            margin: \"auto\",\r\n            display: \"block\",\r\n          }}\r\n        />\r\n      )}\r\n      {verification && (\r\n        <Message variant=\"success\">{verification.response}</Message>\r\n      )}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {errorRegister && <Message variant=\"danger\">{errorRegister}</Message>}\r\n      {loadingRegister && <Loader />}\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Footer.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\EmailVerificationScreen.js",["146","147","148","149"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { register } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nconst EmailVerificationScreen = ({ location, match, history }) => {\r\n  const token = match.params.token\r\n  const dispatch = useDispatch()\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { userData, loading, error } = userRegister\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      history.push(redirect)\r\n    }\r\n    dispatch(register(token))\r\n  }, [history, userData, redirect, token])\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={2}></Col>\r\n      <Col md={6}>\r\n        <Message variant='primary'>Waiting for the confirmation....</Message>\r\n        {loading && <Loader />}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n      </Col>\r\n      <Col md={2}></Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default EmailVerificationScreen\r\n","F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductEditScreen.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductListScreen.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\ProductCreateScreen.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\components\\FormContainer.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\components\\Loader.js",["150"],"import React from 'react'\r\nimport { Audio, Puff } from 'react-loader-spinner'\r\n// import CSS file for styling\r\nimport '../App.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <Puff height=\"100\" width=\"100\" color=\"#2196f3\" ariaLabel=\"Loading\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","F:\\new project\\second_hand_seller\\frontend\\src\\components\\Message.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\components\\Product.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\components\\Meta.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\components\\SearchBox.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\components\\Paginate.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\types\\userConstants.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\types\\productConstants.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\actions\\productActions.js",["151","152","153"],"import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_RESET,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_REVIEW_REQUEST,\r\n  PRODUCT_REVIEW_FAIL,\r\n  PRODUCT_REVIEW_SUCCESS,\r\n} from \"../types/productConstants\";\r\nimport axios from \"axios\";\r\nimport {\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n} from '../types/userConstants'\r\nexport const listProducts =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_DETAILS_RESET,\r\n      });\r\n      dispatch({\r\n        type: PRODUCT_LIST_REQUEST,\r\n      });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n\r\n      // recbook: data.data1.recbook\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//delete product by an admin\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userData },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userData.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(\r\n      `/api/products/${id}`,config);\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//create the product\r\n//this function simply does not take anything and creates a sample product only which later can be edited\r\nexport const createProduct =\r\n  (\r\n    name,\r\n    image1,\r\n    description,\r\n    category,\r\n    expiresOn,\r\n    address,\r\n    shippingCharge,\r\n    price,\r\n    negotiable\r\n  ) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REQUEST,\r\n      });\r\n      const {\r\n        userLogin: { userData },\r\n      } = getState();\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userData.token}`,\r\n        },\r\n      };\r\n      console.log(\"reached here\");\r\n      console.log(config);\r\n      const { data } = await axios.post(\r\n        `/api/products`,\r\n        {\r\n          name,\r\n          images: [{ image1 }],\r\n          description,\r\n          category,\r\n          expiresOn,\r\n          address,\r\n          shippingCharge,\r\n          price,\r\n          negotiable,\r\n        },\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n//update product\r\n\r\nexport const updateProduct =\r\n  (\r\n    id,\r\n    name,\r\n    image1,\r\n    description,\r\n    category,\r\n    expiresOn,\r\n    address,\r\n    shippingCharge,\r\n    price,\r\n    negotiable\r\n  ) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_REQUEST,\r\n      });\r\n      const {\r\n        userLogin: { userData },\r\n      } = getState();\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userData.token}`,\r\n        },\r\n      };\r\n      console.log(\"reached here\");\r\n      console.log(config);\r\n      const { data } = await axios.put(\r\n        `/api/products/${id}`,\r\n        {\r\n          name,\r\n          images: [{ image1: image1 }],\r\n          description,\r\n          category,\r\n          expiresOn,\r\n          address,\r\n          shippingCharge,\r\n          price,\r\n          negotiable,\r\n        },\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n//create review\r\nexport const createProductReview =\r\n  (productId, comment) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_REVIEW_REQUEST,\r\n      });\r\n      const {\r\n        userLogin: { userData },\r\n      } = getState();\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n\r\n          Authorization: `Bearer ${userData.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(\r\n        `/api/products/${productId}/reviews`,\r\n        { comment },\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_REVIEW_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n","F:\\new project\\second_hand_seller\\frontend\\src\\actions\\userActions.js",[],"F:\\new project\\second_hand_seller\\frontend\\src\\screens\\Backward.js",["154"],"\r\n//This Function display icon which indicates to go back to previous page\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst Backward = () => {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsClicked(false);\r\n    document.getElementById(\"backward-icon\").style.border = \"2px solid lightgreen\";\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    document.getElementById(\"backward-icon\").style.border = \"none\";\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsClicked(true);\r\n    document.getElementById(\"backward-icon\").style.border = \"2px solid green\";\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      id=\"backward-icon\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      className=\"w-4 h-4\"\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      onClick={handleClick}\r\n      style={{ borderRadius: \"100%\" }} \r\n    >\r\n      <path d=\"M9.195 18.44c1.25.713 2.805-.19 2.805-1.629v-2.34l6.945 3.968c1.25.714 2.805-.188 2.805-1.628V8.688c0-1.44-1.555-2.342-2.805-1.628L12 11.03v-2.34c0-1.44-1.555-2.343-2.805-1.629l-7.108 4.062c-1.26.72-1.26 2.536 0 3.256l7.108 4.061z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Backward;\r\n",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":26,"column":10,"nodeType":"161","messageId":"162","endLine":26,"endColumn":15},{"ruleId":"159","severity":1,"message":"163","line":33,"column":10,"nodeType":"161","messageId":"162","endLine":33,"endColumn":24},{"ruleId":"164","severity":1,"message":"165","line":54,"column":13,"nodeType":"166","endLine":96,"endColumn":4},{"ruleId":"167","severity":1,"message":"168","line":66,"column":29,"nodeType":"169","messageId":"170","endLine":66,"endColumn":31},{"ruleId":"159","severity":1,"message":"171","line":3,"column":20,"nodeType":"161","messageId":"162","endLine":3,"endColumn":26},{"ruleId":"159","severity":1,"message":"172","line":3,"column":28,"nodeType":"161","messageId":"162","endLine":3,"endColumn":32},{"ruleId":"173","severity":1,"message":"174","line":9,"column":9,"nodeType":"175","endLine":9,"endColumn":54},{"ruleId":"167","severity":1,"message":"176","line":206,"column":38,"nodeType":"169","messageId":"170","endLine":206,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":149,"column":13,"nodeType":"179","messageId":"170","endLine":149,"endColumn":19},{"ruleId":"159","severity":1,"message":"180","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"171","line":3,"column":20,"nodeType":"161","messageId":"162","endLine":3,"endColumn":26},{"ruleId":"159","severity":1,"message":"172","line":3,"column":28,"nodeType":"161","messageId":"162","endLine":3,"endColumn":32},{"ruleId":"164","severity":1,"message":"181","line":19,"column":6,"nodeType":"182","endLine":19,"endColumn":42,"suggestions":"183"},{"ruleId":"159","severity":1,"message":"184","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":15},{"ruleId":"159","severity":1,"message":"185","line":24,"column":3,"nodeType":"161","messageId":"162","endLine":24,"endColumn":19},{"ruleId":"159","severity":1,"message":"186","line":25,"column":3,"nodeType":"161","messageId":"162","endLine":25,"endColumn":22},{"ruleId":"159","severity":1,"message":"187","line":26,"column":3,"nodeType":"161","messageId":"162","endLine":26,"endColumn":22},{"ruleId":"159","severity":1,"message":"188","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":19},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'data1' is assigned a value but never used.","Identifier","unusedVar","'recommandbooks' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["191"],"'Audio' is defined but never used.","'USER_DELETE_FAIL' is defined but never used.","'USER_DELETE_REQUEST' is defined but never used.","'USER_DELETE_SUCCESS' is defined but never used.","'isClicked' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},"Update the dependencies array to be: [history, userData, redirect, token, dispatch]",{"range":"194","text":"195"},[755,791],"[history, userData, redirect, token, dispatch]"]