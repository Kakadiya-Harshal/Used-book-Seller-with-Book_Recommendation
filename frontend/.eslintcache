[{"C:\\second_hand_seller\\frontend\\src\\index.js":"1","C:\\second_hand_seller\\frontend\\src\\store.js":"2","C:\\second_hand_seller\\frontend\\src\\App.js":"3","C:\\second_hand_seller\\frontend\\src\\reducers\\productReducers.js":"4","C:\\second_hand_seller\\frontend\\src\\components\\Footer.js":"5","C:\\second_hand_seller\\frontend\\src\\reducers\\userReducer.js":"6","C:\\second_hand_seller\\frontend\\src\\components\\Header.js":"7","C:\\second_hand_seller\\frontend\\src\\screens\\Landing.js":"8","C:\\second_hand_seller\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\second_hand_seller\\frontend\\src\\screens\\RegisterScreen.js":"10","C:\\second_hand_seller\\frontend\\src\\screens\\UserListScreen.js":"11","C:\\second_hand_seller\\frontend\\src\\screens\\ProductListScreen.js":"12","C:\\second_hand_seller\\frontend\\src\\screens\\ProductEditScreen.js":"13","C:\\second_hand_seller\\frontend\\src\\screens\\UserUpdateScreen.js":"14","C:\\second_hand_seller\\frontend\\src\\screens\\AboutUsScreen.js":"15","C:\\second_hand_seller\\frontend\\src\\screens\\LoginScreen.js":"16","C:\\second_hand_seller\\frontend\\src\\screens\\NotFoundScreen.js":"17","C:\\second_hand_seller\\frontend\\src\\screens\\ProductCreateScreen.js":"18","C:\\second_hand_seller\\frontend\\src\\screens\\EmailVerificationScreen.js":"19","C:\\second_hand_seller\\frontend\\src\\components\\Loader.js":"20","C:\\second_hand_seller\\frontend\\src\\components\\SearchBox.js":"21","C:\\second_hand_seller\\frontend\\src\\components\\Message.js":"22","C:\\second_hand_seller\\frontend\\src\\components\\Paginate.js":"23","C:\\second_hand_seller\\frontend\\src\\components\\Product.js":"24","C:\\second_hand_seller\\frontend\\src\\components\\Meta.js":"25","C:\\second_hand_seller\\frontend\\src\\components\\FormContainer.js":"26","C:\\second_hand_seller\\frontend\\src\\types\\productConstants.js":"27","C:\\second_hand_seller\\frontend\\src\\types\\userConstants.js":"28","C:\\second_hand_seller\\frontend\\src\\actions\\productActions.js":"29","C:\\second_hand_seller\\frontend\\src\\actions\\userActions.js":"30"},{"size":300,"mtime":1678125358120,"results":"31","hashOfConfig":"32"},{"size":1646,"mtime":1678125358148,"results":"33","hashOfConfig":"32"},{"size":2986,"mtime":1678125358108,"results":"34","hashOfConfig":"32"},{"size":3839,"mtime":1678125358130,"results":"35","hashOfConfig":"32"},{"size":358,"mtime":1678475933574,"results":"36","hashOfConfig":"32"},{"size":4768,"mtime":1678125358130,"results":"37","hashOfConfig":"32"},{"size":2786,"mtime":1679819075577,"results":"38","hashOfConfig":"32"},{"size":2387,"mtime":1678125358130,"results":"39","hashOfConfig":"32"},{"size":13722,"mtime":1678125358143,"results":"40","hashOfConfig":"32"},{"size":5413,"mtime":1678125358143,"results":"41","hashOfConfig":"32"},{"size":3128,"mtime":1678125358143,"results":"42","hashOfConfig":"32"},{"size":3310,"mtime":1678125358139,"results":"43","hashOfConfig":"32"},{"size":7777,"mtime":1678125358139,"results":"44","hashOfConfig":"32"},{"size":9002,"mtime":1678125358143,"results":"45","hashOfConfig":"32"},{"size":1494,"mtime":1679821019555,"results":"46","hashOfConfig":"32"},{"size":2679,"mtime":1678125358130,"results":"47","hashOfConfig":"32"},{"size":678,"mtime":1678125358138,"results":"48","hashOfConfig":"32"},{"size":6883,"mtime":1678474888176,"results":"49","hashOfConfig":"32"},{"size":1143,"mtime":1678125358130,"results":"50","hashOfConfig":"32"},{"size":539,"mtime":1678125358120,"results":"51","hashOfConfig":"32"},{"size":780,"mtime":1678125358120,"results":"52","hashOfConfig":"32"},{"size":245,"mtime":1678125358120,"results":"53","hashOfConfig":"32"},{"size":798,"mtime":1678125358120,"results":"54","hashOfConfig":"32"},{"size":718,"mtime":1679822793515,"results":"55","hashOfConfig":"32"},{"size":561,"mtime":1678125358120,"results":"56","hashOfConfig":"32"},{"size":351,"mtime":1678125358109,"results":"57","hashOfConfig":"32"},{"size":1364,"mtime":1678125358149,"results":"58","hashOfConfig":"32"},{"size":1796,"mtime":1678125358150,"results":"59","hashOfConfig":"32"},{"size":5786,"mtime":1678125358109,"results":"60","hashOfConfig":"32"},{"size":7429,"mtime":1678125358109,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"c8aer3",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\second_hand_seller\\frontend\\src\\index.js",[],["129","130"],"C:\\second_hand_seller\\frontend\\src\\store.js",[],"C:\\second_hand_seller\\frontend\\src\\App.js",[],"C:\\second_hand_seller\\frontend\\src\\reducers\\productReducers.js",[],"C:\\second_hand_seller\\frontend\\src\\components\\Footer.js",[],"C:\\second_hand_seller\\frontend\\src\\reducers\\userReducer.js",[],"C:\\second_hand_seller\\frontend\\src\\components\\Header.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\Landing.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\ProductScreen.js",["131"],"import React, { useState, useEffect } from 'react'\r\nimport Meta from '../components/Meta'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { sendEmail } from '../actions/userActions'\r\nimport { PRODUCT_REVIEW_RESET } from '../types/productConstants'\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [text, setText] = useState('')\r\n  const [comment, setComment] = useState('')\r\n\r\n  const [sendMail, setSendMail] = useState(false)\r\n  const [emailSent, setEmailSent] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const emailReducer = useSelector((state) => state.emailReducer)\r\n  const {\r\n    loading: loadingEmail,\r\n    error: errorEmail,\r\n    data: dataEmail,\r\n  } = emailReducer\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    loading: loadingReview,\r\n    error: errorReview,\r\n    success: successReview,\r\n  } = productReviewCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userData } = userLogin\r\n  useEffect(() => {\r\n    if (successReview) {\r\n      setComment('')\r\n      dispatch({\r\n        type: PRODUCT_REVIEW_RESET,\r\n      })\r\n    }\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [match.params.id, dispatch, successReview])\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, comment))\r\n  }\r\n  const emailSubmit = (e) => {\r\n    e.preventDefault()\r\n    setEmailSent(true)\r\n\r\n    dispatch(\r\n      sendEmail(\r\n        product?.seller?.selleremail,\r\n        text,\r\n        userData?.name,\r\n        userData?.address,\r\n        product?.name,\r\n        userData?.email,\r\n        userData?.contact?.phone_no\r\n      )\r\n    )\r\n\r\n    setText('')\r\n\r\n    setSendMail(false)\r\n    setTimeout(() => {\r\n      setEmailSent(false)\r\n    }, 10000)\r\n  }\r\n  const sendEMAIL = () => {\r\n    setSendMail(true)\r\n  }\r\n  const cancelHandler = () => {\r\n    setSendMail(false)\r\n  }\r\n  return (\r\n    <>\r\n      <Link to='/' className='btn btn-success my-3'>\r\n        Go Back\r\n      </Link>\r\n      <br />\r\n      {userData && userData._id === product.user && (\r\n        <Link\r\n          to={`/admin/product/${match.params.id}/edit`}\r\n          className='btn btn-primary my-3'\r\n        >\r\n          Edit Product\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row className='row mb-2'>\r\n            <Col md={6} className='image-area'>\r\n              <Carousel>\r\n                {product.images.map((image) => (\r\n                  <Carousel.Item key={image._id}>\r\n                    <Image\r\n                      className='d-block w-100'\r\n                      src={image?.image1}\r\n                      alt='First slide'\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            </Col>\r\n\r\n            <Col className='borderaround setheight' md={6}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> General Details\r\n              </p>\r\n\r\n              <Row>\r\n                <Col className='product  ' md={4} sm={4} xs={4}>\r\n                  <ul>\r\n                    <li> Product Id:</li>\r\n\r\n                    <li> Posted On:</li>\r\n                    <li> Expires On:</li>\r\n                    <li> Product:</li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={8} sm={8} xs={8}>\r\n                  <ul>\r\n                    <li>{product._id}</li>\r\n\r\n                    <li>{product?.createdAt?.substring(0, 10)}</li>\r\n                    <li>{product?.expiresOn?.substring(0, 10)}</li>\r\n                    <li> {product.name}</li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          {loadingEmail && <Loader />}\r\n          {errorEmail && <Message variant='danger'>{errorEmail}</Message>}\r\n          {/* {console.log(dataEmail?.response)} */}\r\n          {dataEmail && emailSent && (\r\n            <Message variant='success'>{dataEmail.response}</Message>\r\n          )}\r\n          {sendMail && userData && (\r\n            <Row id='email' className='mt-5'>\r\n              <Col md={10} sm={12} className='formAround'>\r\n                <Form onSubmit={emailSubmit}>\r\n                  <div className='text-area1'>\r\n                    <span className='text-area2'>Send Email</span>\r\n\r\n                    <p className='text-area3'>\r\n                      Get in touch with {product?.seller?.sellername}\r\n                    </p>\r\n                  </div>\r\n                  <Row>\r\n                    <Col md={4} sm={4} xs={4}>\r\n                      <ul className='marginshift'>\r\n                        <p>{''}</p>\r\n                        <br />\r\n                        <li className='mt-2'>Your Name:</li>\r\n                        <li>Your Email:</li>\r\n                        <li>Your Phone No:</li>\r\n                        <li>Your Message:</li>\r\n                      </ul>\r\n                    </Col>\r\n                    <Col md={8} sm={8} xs={8}>\r\n                      <p className='cross'>\r\n                        <button\r\n                          onClick={cancelHandler}\r\n                          className=' cancel m-auto '\r\n                        >\r\n                          {' '}\r\n                          <i className='far fa-window-close'></i>\r\n                        </button>\r\n                      </p>\r\n                      <li>{userData.name}</li>\r\n                      <li>{userData.email}</li>\r\n                      <li>{userData?.contact?.phone_no}</li>\r\n                      <li>\r\n                        <textarea\r\n                          style={{ maxWidth: '100%', borderRadius: '5px' }}\r\n                          id='w3review'\r\n                          name='text'\r\n                          value={text}\r\n                          onChange={(e) => setText(e.target.value)}\r\n                          rows='8'\r\n                          cols='55'\r\n                          required\r\n                        />\r\n                      </li>\r\n                    </Col>\r\n                    <button className='button ' type='submit'>\r\n                      Send Email\r\n                    </button>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <Col className='borderaround mt-5' md={10}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> Seller Details\r\n              </p>\r\n\r\n              <Row className='mb-2'>\r\n                <Col className='product' md={4} sm={2} xs={2}>\r\n                  <ul>\r\n                    <li> Name:</li>\r\n\r\n                    <li> Email:</li>\r\n                    <li> Address:</li>\r\n                    <li>Phone:</li>\r\n                    <li></li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={8} sm={10} xs={10}>\r\n                  <ul>\r\n                    <li>{product?.seller?.sellername}</li>\r\n\r\n                    <li>\r\n                      {/* {product?.seller?.selleremail}{' '} */}\r\n                      <span>\r\n                        <button\r\n                          className='emailbutton btn-success'\r\n                          onClick={sendEMAIL}\r\n                        >\r\n                          Send Email\r\n                        </button>\r\n                      </span>\r\n                    </li>\r\n                    <li>{product?.seller?.selleraddress}</li>\r\n                    <li>\r\n                      {product?.seller?.phoneNo?.mobile}{' '}\r\n                      <span>\r\n                        {product?.seller?.phoneNo?.isVerified ? (\r\n                          <span>\r\n                            <i className='fas fa-mobile-alt'></i>\r\n                            <span className='underlined'>verified</span>\r\n                          </span>\r\n                        ) : (\r\n                          <span>\r\n                            <i className='fas fa-mobile-alt'></i>\r\n                            <span className='underlined'>unverified</span>\r\n                          </span>\r\n                        )}{' '}\r\n                      </span>\r\n                    </li>\r\n                    <li></li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n              {sendMail && !userData && (\r\n                <Message variant='danger'>\r\n                  You need to be logged in to use this feature.{' '}\r\n                  <span>\r\n                    <Link to='/login'>Log In</Link> to Continue\r\n                  </span>\r\n                </Message>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-3'>\r\n            <Col className='borderaround mt-5 ' md={10}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> Pricing Details\r\n              </p>\r\n              <Row>\r\n                <Col className='product' md={6} sm={6} xs={4}>\r\n                  <ul>\r\n                    <li>Total Price:</li>\r\n                    {product?.Cost?.negotiable && <li>Negotiable:</li>}\r\n                  </ul>\r\n                </Col>\r\n                <Col md={6} sm={6} xs={8}>\r\n                  <ul>\r\n                    <li> Rs {product?.Cost?.price}</li>\r\n                    {product?.Cost?.negotiable && <li>Yes</li>}\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='borderaround mt-5' md={10} sm={12} xs={12}>\r\n              <p className='details '>\r\n                <i className='fas fa-info'></i> Description\r\n              </p>\r\n              <p className='detailsdescription'>{product.description}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className='borderaround mt-5' md={10}>\r\n              <p className='details'>\r\n                <i className='fas fa-info'></i> Delivery Information\r\n              </p>\r\n              <Row>\r\n                <Col className='product' md={6} sm={6} xs={5}>\r\n                  <ul>\r\n                    <li>Delivery Area:</li>\r\n                    <li>Delivery Charge:</li>\r\n                  </ul>\r\n                </Col>\r\n                <Col md={6} sm={6} xs={7}>\r\n                  <ul>\r\n                    <li>{product?.shippingAddress?.address} </li>\r\n                    <li>\r\n                      {' '}\r\n                      Rs {''}\r\n                      {product?.shippingAddress?.shippingCharge}\r\n                    </li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className='mt-3'>\r\n            <Col md={6}>\r\n              <h4>Buyer's Speak</h4>\r\n              {product.reviews.length === 0 && (\r\n                <Message variant='primary'>Be the First One to Review</Message>\r\n              )}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    {/* <strong>{review.name}</strong>\r\n                    <p>{review.createdAt.substring(0, 10)}</p> */}\r\n                    <p>\r\n                      Q.<span className='comment'> {review.comment} </span>\r\n                      <span className='review'>\r\n                        <span style={{ color: '#32a897', fontWeight: '800' }}>\r\n                          --Posted By <strong>{review.name}</strong> on{' '}\r\n                          <strong> {review.createdAt.substring(0, 10)} </strong>{' '}\r\n                        </span>\r\n                      </span>\r\n                    </p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n\r\n                <ListGroup.Item>\r\n                  <p>Post Your Speak</p>\r\n                  {errorReview && (\r\n                    <Message variant='danger'>{errorReview}</Message>\r\n                  )}\r\n\r\n                  {loadingReview && <Loader />}\r\n                  {userData ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='comment'>\r\n                        {/* <Form.Label>Comment</Form.Label> */}\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Post\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message variant='primary'>\r\n                      You must <Link to='/login'>Log In</Link> to post your\r\n                      speak{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\second_hand_seller\\frontend\\src\\screens\\RegisterScreen.js",["132"],"import React, { useState, useEffect } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { verify } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [contact, setContact] = useState('')\r\n\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const dispatch = useDispatch()\r\n  const userVerification = useSelector((state) => state.userVerification)\r\n  const { verification, loading, error } = userVerification\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const {\r\n    userData,\r\n    loading: loadingRegister,\r\n    error: errorRegister,\r\n  } = userRegister\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  useEffect(() => {\r\n    if (userData) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, redirect, userData])\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    } else {\r\n      dispatch(verify(name, email, password, contact, address))\r\n    }\r\n  }\r\n  return (\r\n    <FormContainer>\r\n      <h1>SIGN UP</h1>\r\n      <Form onSubmit={submitHandler} className='mt-5'>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter Name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>\r\n            Email Address{' '}\r\n            <small className='slanted'>\r\n              {' '}\r\n              *Be sure to enter your valid email address\r\n            </small>\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter Email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label> Address</Form.Label>\r\n          <Form.Control\r\n            type='address'\r\n            placeholder='Enter Address'\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='contact No'>\r\n          <Form.Label>\r\n            Mobile No{' '}\r\n            <small className='slanted'>\r\n              * Be sure to enter a correct 10 digit number starting with 9\r\n            </small>\r\n          </Form.Label>\r\n          <Form.Control\r\n            type='contact'\r\n            placeholder='Enter Mobile No'\r\n            value={contact}\r\n            onChange={(e) => setContact(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmpassword'>\r\n          <Form.Label>Confirm Password </Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>{' '}\r\n      <Row className='py-3'>\r\n        {/* {!loading && ()} */}\r\n        <Col>\r\n          Already Have an Account?\r\n          <Link\r\n            className='underlined1 '\r\n            to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n          >\r\n            <span className='btn-primary mb-3 '> Login</span>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      {loading && (\r\n        <Spinner\r\n          animation='border'\r\n          role='status'\r\n          variant='danger'\r\n          style={{\r\n            width: '100px',\r\n            margin: 'auto',\r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block',\r\n          }}\r\n        />\r\n      )}\r\n      {verification && (\r\n        <Message variant='success'>{verification.response}</Message>\r\n      )}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {errorRegister && <Message variant='danger'>{errorRegister}</Message>}\r\n      {loadingRegister && <Loader />}\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\second_hand_seller\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\UserUpdateScreen.js",["133"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts, deleteProduct } from '../actions/productActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { updateUser, getUserDetails } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_RESET, USER_DETAILS_RESET } from '../types/userConstants'\r\nconst UserUpdateScreen = ({ history, match }) => {\r\n  const userId = match.params.id\r\n  var i = 1\r\n  const [name, setName] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [phone_no, setPhone_no] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userData } = userLogin\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const { success, loading, error } = userUpdate\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { user, loading: loadingDetails } = userDetails\r\n  const productList = useSelector((state) => state.productList)\r\n  const { products, loading: loadinglist } = productList\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n\r\n  const { success: successDelete } = productDelete\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n    if (!userData || success) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n\r\n      if (userData && userData.isAdmin) {\r\n        history.push('/admin/userlist')\r\n      } else {\r\n        history.push('/')\r\n      }\r\n    } else {\r\n      if (!user?.name) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setAddress(user.address)\r\n        setPhone_no(user?.contact?.phone_no)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [history, userData, user, success, dispatch, userId, successDelete])\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    } else {\r\n      dispatch(\r\n        updateUser({\r\n          _id: userId,\r\n          name,\r\n          email,\r\n          password,\r\n          address,\r\n\r\n          phone_no,\r\n        })\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <FormContainer>\r\n        <h1>Details</h1>\r\n\r\n        {loadingDetails && <Loader />}\r\n        <Form onSubmit={submitHandler} className='mt-5 mb-2'>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>\r\n              Email Address{' '}\r\n              <small className='slanted'>\r\n                {' '}\r\n                *Be sure to enter your valid email address\r\n              </small>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='address'>\r\n            <Form.Label> Address</Form.Label>\r\n            <Form.Control\r\n              type='address'\r\n              placeholder='Enter Address'\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='contact No'>\r\n            <Form.Label>\r\n              Mobile No{' '}\r\n              <small className='slanted'>\r\n                * Be sure to enter a correct 10 digit number starting with 9\r\n              </small>\r\n            </Form.Label>\r\n            <Form.Control\r\n              type='contact'\r\n              placeholder='Enter Mobile No'\r\n              value={phone_no}\r\n              onChange={(e) => setPhone_no(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmpassword'>\r\n            <Form.Label>Confirm Password </Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          {loading && <Loader />}\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update Profile\r\n          </Button>\r\n        </Form>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && (\r\n          <Message variant='success'>Profile updated successfully</Message>\r\n        )}\r\n      </FormContainer>\r\n      <Row>\r\n        <Col md={2}></Col>\r\n        <Col md={8}>\r\n          {loadinglist ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <h3>My Uploads</h3>\r\n              <Table\r\n                striped\r\n                bordered\r\n                hover\r\n                responsive\r\n                className='table-sm'\r\n                variant='danger'\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>SN</th>\r\n                    <th>ID</th>\r\n                    <th>Product Name</th>\r\n                    <th>Category</th>\r\n                    <th>Price</th>\r\n                    <th>Negotiable</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {console.log(products)}\r\n                  {console.log(products.length)} */}\r\n                  {userData &&\r\n                    products &&\r\n                    products.length !== 0 &&\r\n                    products.map(\r\n                      (product) =>\r\n                        product &&\r\n                        product.user == userData._id && (\r\n                          <tr key={product._id}>\r\n                            <td>{i++}</td>\r\n                            <td>{product._id}</td>\r\n                            <td>{product.name}</td>\r\n\r\n                            <td>{product.category}</td>\r\n                            <td>{product?.Cost.price}</td>\r\n                            <td>\r\n                              {product?.Cost.negotiable ? (\r\n                                <i\r\n                                  className='fas fa-check'\r\n                                  style={{ color: 'green' }}\r\n                                ></i>\r\n                              ) : (\r\n                                <i\r\n                                  className='fas fa-times'\r\n                                  style={{ color: 'red' }}\r\n                                ></i>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              <LinkContainer\r\n                                to={`/admin/product/${product._id}/edit`}\r\n                              >\r\n                                <Button variant='light' className='btn-sm'>\r\n                                  <i className='fas fa-edit'></i>\r\n                                </Button>\r\n                              </LinkContainer>\r\n                              <Button\r\n                                variant='danger'\r\n                                className='btn-sm'\r\n                                onClick={() => deleteHandler(product._id)}\r\n                              >\r\n                                <i className='fas fa-trash'></i>\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        )\r\n                    )}\r\n                </tbody>\r\n              </Table>\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col md={2}></Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserUpdateScreen\r\n","C:\\second_hand_seller\\frontend\\src\\screens\\AboutUsScreen.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\NotFoundScreen.js",["134","135","136"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\n\r\nconst NotFoundScreen = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <img src='https://i.imgur.com/lKJiT77.png' />\r\n      </Row>\r\n      <Row>\r\n        <Col md={3}></Col>\r\n\r\n        <Col md={6}>\r\n          <h1 style={{ textAlign: 'Center' }}>\r\n           This Hungry Dog Ate This Page\r\n          </h1>\r\n        </Col>\r\n        <Col md={3}></Col>\r\n      </Row>\r\n      <Row className='docenter'>\r\n        <Link to='/' className='btn btn-success '>\r\n          GO BACK\r\n        </Link>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotFoundScreen\r\n","C:\\second_hand_seller\\frontend\\src\\screens\\ProductCreateScreen.js",[],"C:\\second_hand_seller\\frontend\\src\\screens\\EmailVerificationScreen.js",["137","138","139","140"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { register } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nconst EmailVerificationScreen = ({ location, match, history }) => {\r\n  const token = match.params.token\r\n  const dispatch = useDispatch()\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { userData, loading, error } = userRegister\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      history.push(redirect)\r\n    }\r\n    dispatch(register(token))\r\n  }, [history, userData, redirect, token])\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={2}></Col>\r\n      <Col md={6}>\r\n        <Message variant='primary'>Waiting for the confirmation....</Message>\r\n        {loading && <Loader />}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n      </Col>\r\n      <Col md={2}></Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default EmailVerificationScreen\r\n","C:\\second_hand_seller\\frontend\\src\\components\\Loader.js",["141"],"import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      variant='danger'\r\n      style={{\r\n        width: '100px',\r\n        margin: 'auto',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        marginTop: '100px',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n//this is also very nice as no image is required locally\r\n","C:\\second_hand_seller\\frontend\\src\\components\\SearchBox.js",[],"C:\\second_hand_seller\\frontend\\src\\components\\Message.js",[],"C:\\second_hand_seller\\frontend\\src\\components\\Paginate.js",[],"C:\\second_hand_seller\\frontend\\src\\components\\Product.js",[],"C:\\second_hand_seller\\frontend\\src\\components\\Meta.js",[],"C:\\second_hand_seller\\frontend\\src\\components\\FormContainer.js",[],"C:\\second_hand_seller\\frontend\\src\\types\\productConstants.js",[],"C:\\second_hand_seller\\frontend\\src\\types\\userConstants.js",[],"C:\\second_hand_seller\\frontend\\src\\actions\\productActions.js",[],"C:\\second_hand_seller\\frontend\\src\\actions\\userActions.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":3,"column":38,"nodeType":"148","messageId":"149","endLine":3,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":149,"column":13,"nodeType":"152","messageId":"153","endLine":149,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":206,"column":38,"nodeType":"156","messageId":"153","endLine":206,"endColumn":40},{"ruleId":"146","severity":1,"message":"157","line":3,"column":20,"nodeType":"148","messageId":"149","endLine":3,"endColumn":26},{"ruleId":"146","severity":1,"message":"158","line":3,"column":28,"nodeType":"148","messageId":"149","endLine":3,"endColumn":32},{"ruleId":"159","severity":1,"message":"160","line":9,"column":9,"nodeType":"161","endLine":9,"endColumn":54},{"ruleId":"146","severity":1,"message":"162","line":1,"column":28,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"157","line":3,"column":20,"nodeType":"148","messageId":"149","endLine":3,"endColumn":26},{"ruleId":"146","severity":1,"message":"158","line":3,"column":28,"nodeType":"148","messageId":"149","endLine":3,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":19,"column":6,"nodeType":"165","endLine":19,"endColumn":42,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"151","line":13,"column":9,"nodeType":"152","messageId":"153","endLine":13,"endColumn":15},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Button' is defined but never used.","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [history, userData, redirect, token, dispatch]",{"range":"172","text":"173"},[755,791],"[history, userData, redirect, token, dispatch]"]